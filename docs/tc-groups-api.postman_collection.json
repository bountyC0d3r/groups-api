{
	"info": {
		"_postman_id": "1ae86b43-0276-4a0d-8dcb-8fc98699c0e2",
		"name": "tc-groups-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "group",
			"item": [
				{
					"name": "create group",
					"item": [
						{
							"name": "create group via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b01a81e1-7c0f-4637-832f-4e08d014ee90",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1\",\n    \"description\": \"desc1\",\n    \"privateGroup\": true,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group via M2M Read And Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82757580-ebc8-4a96-ab86-e2c906e4c64a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_ID2\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_RW_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group2\",\n    \"description\": \"desc2\",\n    \"privateGroup\": false,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group via M2M Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e186dd80-b8f1-4dd1-b819-bed4820ca0e6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_ID3\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_W_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group3\",\n    \"description\": \"desc3\",\n    \"privateGroup\": false,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group via M2M All",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "617e944e-81b9-4ca0-8a70-94caaa34b324",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_ID4\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_ALL_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group4\",\n    \"description\": \"desc4\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group with domain",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d97d0070-c8c8-432c-88fb-a032f6f1d5ed",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"GROUP_WITH_DOMAIN_ID\", pm.response.json().id);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"equals": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group5\",\n    \"description\": \"desc5\",\n    \"privateGroup\": false,\n    \"selfRegister\": true,\n    \"domain\": \"test_domain\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "create group with status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group6\",\n    \"description\": \"desc6\",\n    \"privateGroup\": false,\n    \"selfRegister\": true,\n    \"domain\": \"test_domain\",\n    \"status\": \"inactive\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								},
								"description": "create group with status"
							},
							"response": []
						},
						{
							"name": "failure create group via user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c51ff50-88e2-400e-8008-2d576dd4ed60",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group_fail\",\n    \"description\": \"desc_fail\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create group via M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31c08282-8e1c-4299-87a9-97bf4ed77fc3",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group_fail\",\n    \"description\": \"desc_fail\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create group with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec189d37-e118-4822-a1b6-e9017da738fa",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group_fail\",\n    \"description\": \"desc_fail\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure create group without token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f70a22ed-a29f-4ec1-a7ac-b5ed81692c58",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group_fail\",\n    \"description\": \"desc_fail\",\n    \"privateGroup\": false,\n    \"selfRegister\": true\n}"
								},
								"url": {
									"raw": "{{URL}}/groups",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update group",
					"item": [
						{
							"name": "update group via admin",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-1\",\n    \"description\": \"desc1-updated-1\",\n    \"privateGroup\": true,\n    \"selfRegister\": false,\n    \"domain\": \"add_domain\",\n    \"oldId\": \"1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group via M2M Read And Write",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_RW_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-2\",\n    \"description\": \"desc1-updated-2\",\n    \"privateGroup\": true,\n    \"selfRegister\": false,\n    \"oldId\": \"1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group via M2M Write",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-3\",\n    \"description\": \"desc1-updated-3\",\n    \"privateGroup\": true,\n    \"selfRegister\": false,\n    \"oldId\": \"1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group via M2M All",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-4\",\n    \"description\": \"desc1-updated-4\",\n    \"privateGroup\": true,\n    \"selfRegister\": false,\n    \"oldId\": \"1\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group with domain",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group5\",\n    \"description\": \"desc5\",\n    \"privateGroup\": false,\n    \"selfRegister\": true,\n    \"domain\": \"update_domain\",\n    \"oldId\": \"123\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_WITH_DOMAIN_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_WITH_DOMAIN_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group without domain",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group2-update\",\n    \"description\": \"desc2-update\",\n    \"privateGroup\": false,\n    \"selfRegister\": true,\n    \"oldId\": \"2\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update group without status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-5\",\n    \"description\": \"desc1-updated-5\",\n    \"privateGroup\": true,\n    \"selfRegister\": false,\n    \"oldId\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update group via user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "39b17d67-6af6-40e1-9f92-4f46987b34b7",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-fail\",\n    \"description\": \"desc1-updated-fail\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update group via M2M read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "55164417-5e3d-499e-aee7-4461d2a6b8a1",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-fail\",\n    \"description\": \"desc1-updated-fail\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update group with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "087fc2b2-d61c-4d42-84af-b7543e37c833",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer invalid"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-fail\",\n    \"description\": \"desc1-updated-fail\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure update group without token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb13d1ac-b5b4-4fd0-b993-be2e220aedab",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-fail\",\n    \"description\": \"desc1-updated-fail\",\n    \"privateGroup\": true,\n    \"selfRegister\": false\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update group with status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"group1-updated-5\",\n    \"description\": \"desc1-updated-5\",\n    \"privateGroup\": true,\n    \"selfRegister\": false,\n    \"oldId\": \"1\",\n    \"status\": \"inactive\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "search groups",
					"item": [
						{
							"name": "search groups from admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&name=rOuP",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183",
											"disabled": true
										},
										{
											"key": "membershipType",
											"value": "group",
											"disabled": true
										},
										{
											"key": "name",
											"value": "rOuP"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search groups from user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&memberId=11ab038e-48da-123b-96e8-8d3b99b6d183&membershipType=group",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183"
										},
										{
											"key": "membershipType",
											"value": "group"
										}
									]
								},
								"description": "memberId and membershipType are ignored in backend, memberId change into user id, membershipType change into 'user'"
							},
							"response": []
						},
						{
							"name": "search groups via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&memberId=11ab038e-48da-123b-96e8-8d3b99b6d183&membershipType=group",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183"
										},
										{
											"key": "membershipType",
											"value": "group"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search groups return all",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search groups with filter oldId",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&oldId=1",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "oldId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search groups with filter privateGroup and selfRegister",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&privateGroup=false&selfRegister=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "privateGroup",
											"value": "false"
										},
										{
											"key": "selfRegister",
											"value": "true"
										},
										{
											"key": "oldId",
											"value": "12346",
											"disabled": true
										},
										{
											"key": "selfRegister",
											"value": "false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure search groups invalid parameter 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38808608-84e8-41a4-a461-120d84c603c5",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&memberId=11ab038e-48da-123b-96e8-8d3b99b6d183",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183"
										},
										{
											"key": "membershipType",
											"value": "group",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure search groups invalid parameter 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "397fb1c6-2ec6-4c6b-a4c4-07229b8aa402",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups?page=1&perPage=10&membershipType=group",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "memberId",
											"value": "11ab038e-48da-123b-96e8-8d3b99b6d183",
											"disabled": true
										},
										{
											"key": "membershipType",
											"value": "group"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get group",
					"item": [
						{
							"name": "get public group via admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get public group via user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get public group via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_RW_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via user4",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get group with domain",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_WITH_DOMAIN_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_WITH_DOMAIN_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get private group via user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ca08f71-0387-4b89-a5f5-551501f6e7bf",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete group",
					"item": [
						{
							"name": "failure delete group via M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d8b8ce31-af1a-4c74-b61d-db13803cbbc2",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_R_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure delete group via user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "381ef86f-2b45-470f-b7fe-4d9570912ee8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group via admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51f1f8c0-cf4d-4f38-bf8d-8c098af3c209",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group via M2M Read And Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b3981e9-4dda-4699-9209-4d172185f49b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_RW_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group via M2M Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6dc66ac-d4e6-4ac0-a0dc-7d92d92930ae",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group via M2M All",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "99b437e7-0231-41ee-becb-923ca39a5afe",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID4}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID4}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get group by old id",
					"item": [
						{
							"name": "get public group via admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/2",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "get public group via user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/2",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "get public group via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_RW_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/2",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/1?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"1"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/1?includeSubGroups=true&oneLevel=false",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"1"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group via user4",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/1?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"1"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get private group via user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ece5d8c-c4c6-4567-89e5-04d967758773",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/oldId/1?includeSubGroups=true&oneLevel=false&fields=id,name,description",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"oldId",
										"1"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										},
										{
											"key": "includeParentGroup",
											"value": "true",
											"disabled": true
										},
										{
											"key": "oneLevel",
											"value": "false"
										},
										{
											"key": "fields",
											"value": "id,name,description"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3e27cd6e-87d4-43d3-8816-18fe2a77644f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0d37d396-a487-4156-a777-6d0be4266623",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "group membership",
			"item": [
				{
					"name": "get group members",
					"item": [
						{
							"name": "get group members from admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get group members via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get group members from user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group members from admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group members from user4",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get private group members via M2M",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get private group members from user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7cb0e38a-f0c3-4819-93e5-d27db5c27e42",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "add group member",
					"item": [
						{
							"name": "failure add group member (user) by user4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1fd4d048-8d2c-406c-9fd1-3e4573dcf857",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure add group member (user) via M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "002f5955-40cc-4d72-8a1b-27c5b8d047aa",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure add group member (user) into non self-reg group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "437a7e45-f8e1-43f9-bc80-6461aef62ff9",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "add group member (user) by user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2ee6900-95a8-4245-95eb-92a371bab765",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "add group member (user) via M2M Write",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4488136a-e2bc-4fd2-a3e6-e00c349057c9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_USER_ID2}}\",\n    \"membershipType\": \"user\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure add group member (group) by user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb6b2a51-a639-4004-9f84-c3eb6da73429",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_GROUP_ID2}}\",\n    \"membershipType\": \"group\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure add group member (group) by M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "de4ec846-8433-4865-b4b6-4990818453c2",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{TEST_GROUP_ID2}}\",\n    \"membershipType\": \"group\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "add group member (group) by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13b76e4e-0927-415d-ab7c-d02e9a00f478",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{GROUP_ID3}}\",\n    \"membershipType\": \"group\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "add group member (group) by admin Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17fa8083-1945-42f5-a824-dfc532e9f73e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_W_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberId\": \"{{GROUP_ID4}}\",\n    \"membershipType\": \"group\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}/members",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}",
										"members"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get group member",
					"item": [
						{
							"name": "get group member (user)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get group member (group)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}/members/{{GROUP_ID3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}",
										"members",
										"{{GROUP_ID3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure get private group member (user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e72e8850-3104-443b-bdcb-14a2dd48b6d8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER2_USER_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get member groups",
					"item": [
						{
							"name": "get member groups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/memberGroups/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"memberGroups",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get member groups - missing token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "20a052bd-e0ff-4aff-bc55-fce52afadffe",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/memberGroups/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"memberGroups",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7f30c911-4361-4d1b-9397-d76f995e1c93",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1dcd794e-cc8e-4dbd-a8d4-70407282eec9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "get group members count",
					"item": [
						{
							"name": "get group members count excluding subgroups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/membersCount",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"membersCount"
									]
								}
							},
							"response": []
						},
						{
							"name": "get group members count including subgroups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/membersCount?includeSubGroups=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"membersCount"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get group members count - invalid query param",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4591ecc9-4710-435f-b497-24874adb47e5",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/membersCount?includeSubGroups=abc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"membersCount"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7ec8833b-741f-46f1-9817-a542fe16ad6d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2fe69148-5cad-4c80-8b4a-66d7c8a9d1dc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "list groups member count",
					"item": [
						{
							"name": "list groups member count excluding subgroups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/memberGroups/groupMembersCount",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"memberGroups",
										"groupMembersCount"
									]
								}
							},
							"response": []
						},
						{
							"name": "list groups member count including subgroups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/memberGroups/groupMembersCount?includeSubGroups=true",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"memberGroups",
										"groupMembersCount"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - list groups member count - invalid query param",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10b26bba-7c83-4199-b70f-1b33122e4292",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"url": {
									"raw": "{{URL}}/groups/memberGroups/groupMembersCount?includeSubGroups=abc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"memberGroups",
										"groupMembersCount"
									],
									"query": [
										{
											"key": "includeSubGroups",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "da9d70d2-540c-4d0e-8474-a803e34026c2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3e17b5dc-af75-4199-9cf4-5ec66254c8f6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete group member",
					"item": [
						{
							"name": "failure delete group member (group) by user2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "65fd74ac-8744-4957-ab41-aac04d853c2d",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members/{{TEST_GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members",
										"{{TEST_GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure delete group member (group) by M2M Read",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e83dc67-2898-4cd7-8a93-35bb821d7fc8",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members/{{TEST_GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members",
										"{{TEST_GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group member (user) by user2",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER2_USER_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group member (group) by M2M",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_ALL_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members/{{TEST_GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members",
										"{{TEST_GROUP_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure delete group member (user in non self-reg group) by user4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60c17e18-f2a7-4952-9940-9f1651757756",
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER4_USER_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/members/{{TEST_USER_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"members",
										"{{TEST_USER_ID2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete group member (user in non self-reg group) by admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bc50e306-5838-4888-95a8-b39998dfc13a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID2}}/members/{{TEST_USER_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID2}}",
										"members",
										"{{TEST_USER_ID2}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "46988799-ee17-4376-ae2b-76a53e964dc4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "82ab7757-b2f4-4954-b665-fc68957c865b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "sub groups",
			"item": [
				{
					"name": "create sub group",
					"item": [
						{
							"name": "create sub group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2eba4635-49d3-4498-a57f-374eef46a0cf",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.environment.set(\"SUB_GROUP_ID\", pm.response.json().id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"sub group 1\",\n    \"description\": \"desc\",\n    \"privateGroup\": false,\n    \"selfRegister\": true,\n    \"domain\": \"domain\",\n    \"ssoId\": \"ssoId\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/subGroup",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"subGroup"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create sub group - forbidden M2M",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a09910c3-ed98-4e7e-ba8f-97bc13c3564e",
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_R_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"sub group 1\",\n    \"description\": \"desc\",\n    \"privateGroup\": false,\n    \"selfRegister\": true,\n    \"domain\": \"domain\",\n    \"ssoId\": \"ssoId\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/subGroup",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"subGroup"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - create sub group - invalid body",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e66a1761-225f-44d4-b00a-eb3c6225a83f",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"sub group 1\",\n    \"invalid\": \"desc\"\n}"
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/subGroup",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"subGroup"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "acca325a-2601-4e07-98f9-63b9f63f6b00",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7032c28-d95d-4731-86d1-1a40367e31d2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete sub group",
					"item": [
						{
							"name": "delete sub group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "933e3edc-7c97-4d59-b062-c79ee2267726",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_ALL_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/subGroup/{{SUB_GROUP_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"subGroup",
										"{{SUB_GROUP_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete sub group -  not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d68ba111-1934-4f56-8ec9-9260aef2aa7c",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/subGroup/abc123",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"subGroup",
										"abc123"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete sub group - not sub group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "737f888a-039b-4cc4-86cf-4835d50d23a7",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/groups/{{GROUP_ID}}/subGroup/{{GROUP_ID2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"groups",
										"{{GROUP_ID}}",
										"subGroup",
										"{{GROUP_ID2}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "88818248-bd05-4b92-b4b5-5d88eede3b2d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "32cd6b68-2b36-4683-8a26-6a0b77cccbe2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4ab30456-87ab-4dc5-9f98-059671e05964",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5b8a0c89-8357-4e76-836d-852a7e485dc7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "group roles",
			"item": [
				{
					"name": "get group roles",
					"item": [
						{
							"name": "get group roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d914f76-01f5-4621-8500-f6ab526d7f4b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{M2M_ALL_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/group-roles/users/{{TEST_USER_ID}}?page=1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"group-roles",
										"users",
										"{{TEST_USER_ID}}"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get group roles - invalid page",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e8387961-8688-4e3d-9748-d65230577486",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/group-roles/users/{{TEST_USER_ID}}?page=-1&perPage=10",
									"host": [
										"{{URL}}"
									],
									"path": [
										"group-roles",
										"users",
										"{{TEST_USER_ID}}"
									],
									"query": [
										{
											"key": "page",
											"value": "-1"
										},
										{
											"key": "perPage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - get group roles - invalid perPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07c7cf37-a128-4924-af51-86987f79f730",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{M2M_ALL_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URL}}/group-roles/users/{{TEST_USER_ID}}?page=1&perPage=abc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"group-roles",
										"users",
										"{{TEST_USER_ID}}"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "659f1f2f-2421-4f5b-a87e-891fabd9539d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ee5c91e7-4bf4-48ce-a77d-3babe53b6286",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "add group role",
					"item": [
						{
							"name": "add group role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "373aed6f-2e07-4310-9288-1587a8f4f753",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"{{GROUP_ID}}\",\n    \"role\": \"groupManager\"\n}"
								},
								"url": {
									"raw": "{{URL}}/group-roles/users/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"group-roles",
										"users",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - add group role - invalid role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ceb36ab-7249-4314-a5cf-0f9cc060394f",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groupId\": \"{{GROUP_ID}}\",\n    \"role\": \"invalid\"\n}"
								},
								"url": {
									"raw": "{{URL}}/group-roles/users/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"group-roles",
										"users",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - add group role - missing group id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "efa9b678-9b1c-410c-98fd-2715b615414a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"groupManager\"\n}"
								},
								"url": {
									"raw": "{{URL}}/group-roles/users/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"group-roles",
										"users",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "05d28721-758d-4341-9c51-1e25af6dd999",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d5160ada-e439-44a6-8af3-c7fd8935acce",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete group role",
					"item": [
						{
							"name": "delete group role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e412250-cc57-4444-8589-a04be4e19221",
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"groupId\": \"{{GROUP_ID}}\",\r\n    \"role\": \"groupManager\"\r\n}"
								},
								"url": {
									"raw": "{{URL}}/group-roles/users/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"group-roles",
										"users",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete group role - invalid role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c18b08b6-4596-414a-a45c-b8884605a3d0",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"groupId\": \"{{GROUP_ID}}\",\r\n    \"role\": \"invalid\"\r\n}"
								},
								"url": {
									"raw": "{{URL}}/group-roles/users/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"group-roles",
										"users",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "failure - delete group role - group not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b19a618e-98b2-4939-9cdd-0e0a16036c4d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{USER1_ADMIN_TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"groupId\": \"abc123\",\r\n    \"role\": \"groupManager\"\r\n}"
								},
								"url": {
									"raw": "{{URL}}/group-roles/users/{{TEST_USER_ID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"group-roles",
										"users",
										"{{TEST_USER_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "87491343-b221-41bc-8ae8-3f5fe28ee0ad",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "71b44a8a-b4d6-45a8-91c9-7009cd9bfd78",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0124d296-7df0-4555-b251-c60b5321559f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1323c504-1726-491e-b1af-e6877fe865a8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "health check",
			"item": [
				{
					"name": "get app health status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}/groups/health",
							"host": [
								"{{URL}}"
							],
							"path": [
								"groups",
								"health"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "swagger UI",
			"item": [
				{
					"name": "get swagger UI",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}/groups/docs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"groups",
								"docs"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dad92673-8d40-4b1c-acd8-edbfbee783dc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f5d39d86-420e-4371-9c62-98f72a6118df",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e1d44ac6-2909-454e-b06f-7f8c6b63e3b7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ba5fef76-28d3-4ef4-9e64-ca1ffd9a67c6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}